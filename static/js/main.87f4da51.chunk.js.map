{"version":3,"sources":["Components/Navbar.js","Components/todo.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","href","src","alt","id","type","placeholder","globalID","todo","useState","task","settask","todos","settodos","onSubmit","event","preventDefault","old","class","value","onChange","target","required","map","item","onClick","itemID","oldtodo","filter","items","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNA6BeA,MA1Bf,WACI,OAAO,8BACH,qBAAKC,UAAU,8CAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,SACI,qBAAKC,IAAI,uBAAuBF,UAAU,YAAYG,IAAI,WAE9D,sBAAKH,UAAU,2BAA2BI,GAAG,yBAA7C,UACI,qBAAIJ,UAAU,kCAAd,UACI,oBAAIA,UAAU,WAAd,SACI,mBAAGA,UAAU,kBAAkB,eAAa,OAAOC,KAAK,IAAxD,oBAEJ,oBAAID,UAAU,WAAd,SACI,mBAAGA,UAAU,WAAWC,KAAK,wCAA7B,yBAGR,uBAAMD,UAAU,SAAhB,UACI,uBAAOA,UAAU,oBAAoBK,KAAK,SAASC,YAAY,SAAS,aAAW,WACnF,wBAAQN,UAAU,0BAA0BK,KAAK,SAAjD,kC,cClBpBE,EAAW,EA6DAC,MA3Df,WAEI,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAmBA,OAAO,8BACH,sBAAKb,UAAU,8EAAf,UACI,qDACA,sBAAMc,SApBd,SAAoBC,GAChBA,EAAMC,iBACNH,GAAS,SAAAI,GAML,OALAN,EAAQ,IAEH,GAAD,mBAAMM,GAAN,CAAW,CAAET,KAAME,EAAMN,GAAIG,QAKrCA,KAUI,SACI,sBAAKW,MAAM,eAAX,UACI,qBAAKA,MAAM,kBAAX,SACI,uBACIlB,UAAU,eACVM,YAAY,iBACZD,KAAK,OAAOc,MAAOT,EACnBU,SAAU,SAAAL,GAINJ,EAAQI,EAAMM,OAAOF,QAEzBG,UAAQ,MAEhB,qBAAKJ,MAAM,yBAAX,SACI,wBAAQb,KAAK,SAASL,UAAU,4BAAhC,+BAIZ,oBAAIA,UAAU,mFAAd,SACKY,EAAMW,KAAI,SAACC,GACR,OAAO,qBAAKxB,UAAU,yCAAf,SACH,sBAAKA,UAAU,qCAAf,UACI,oBAAIA,UAAU,4BAAd,SAA2CwB,EAAKhB,OAChD,wBAAQR,UAAU,iBAAiByB,QAAS,kBAjChDC,EAiCiEF,EAAKpB,QAhCtFS,GAAS,SAAAc,GAAO,OAAIA,EAAQC,QAAO,SAAAC,GAAK,OAAIA,EAAMzB,KAAOsB,QAD7D,IAAoBA,GAiCI,wBAH4DF,EAAKpB,eCxC9E0B,MAPf,WACE,OAAO,gCACL,cAAC,EAAD,IACA,cAAC,EAAD,QCIWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.87f4da51.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n\nfunction Navbar() {\n    return <div>\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <div className=\"container-fluid\">\n                <a className=\"nav-link\" href='#'>\n                    <img src=\"apple-touch-icon.png\" className='main-logo' alt=\"Logo\" />\n                </a>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"https://github.com/Rajkumar-justcoder\">Github</a>\n                        </li>\n                    </ul>\n                    <form className=\"d-flex\">\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n                    </form>\n                </div>\n            </div>\n        </nav>\n    </div>;\n}\n\nexport default Navbar;\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState } from 'react';\n\nlet globalID = 0\n\nfunction todo() {\n\n    const [task, settask] = useState('')\n    const [todos, settodos] = useState([])\n\n    function createtodo(event) {\n        event.preventDefault()\n        settodos(old => {\n            settask('')\n            let data\n            data= [...old, { todo: task, id: globalID }]\n\n            \n            return data;\n        })\n        globalID++;\n    }\n    function itemremove(itemID) {\n        settodos(oldtodo => oldtodo.filter(items => items.id !== itemID))\n    }\n\n\n    return <div>\n        <div className='main-sec d-flex flex-column align-items-sm-center justify-content-sm-center'>\n            <h1>Best to do app Ever</h1>\n            <form onSubmit={createtodo}>\n                <div class=\"input-group \">\n                    <div class=\"custom-file p-2\">\n                        <input\n                            className='form-control'\n                            placeholder='Add Todo Items'\n                            type='text' value={task}\n                            onChange={event => {\n                                // if (event.target.value === null){\n\n                                // }\n                                settask(event.target.value)\n                            }}\n                            required />\n                    </div>\n                    <div class=\"input-group-append p-2\">\n                        <button type='submit' className='btn btn-outline-secondary'>CreateTodo</button>\n                    </div>\n                </div>\n            </form>\n            <ul className='d-flex list-unstyled w-100 flex-column align-items-center justify-content-center'>\n                {todos.map((item) => {\n                    return <div className='d-flex justify-content-center w-75 p-1' key={item.id}>\n                        <div className='w-50 d-flex justify-content-around'>\n                            <li className='m-2  text-decoration-none'>{item.todo}</li>\n                            <button className='btn btn-danger' onClick={() => itemremove(item.id)}>Delete</button>\n                        </div>\n                    </div>\n                })}\n            </ul>\n        </div>\n    </div>\n}\n\nexport default todo;\n","import './App.css';\nimport React from 'react';\nimport Navbar from './Components/Navbar';\nimport Todo from './Components/todo';\n\nfunction App() {\n  return <div>\n    <Navbar />\n    <Todo />\n  </div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}